version: '3'
services:
  
  mysqldb:
    container_name: mysqldb
    environment:
      MYSQL_ROOT_PASSWORD: '123'
    image: mysql
    ports:
    - 13306:3306
    volumes:
    - ./db/my.cnf:/etc/my.cnf
    - ./db/data:/var/lib/mysql
    - ./db/:/docker-entrypoint-initdb.d
    restart: on-failure

  backend-app:
    depends_on:
      - mysqldb
    build: ./Back-end
    restart: on-failure
    container_name: backend-app
    # ports:
    #   - 8080:8080 
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.driver-class-name" : "com.mysql.cj.jdbc.Driver",
        "spring.datasource.username" : "dev",
        "spring.datasource.password" : "int221",
        "spring.datasource.url" : "jdbc:mysql://mysqldb:3306/bookingmodels?allowPublicKeyRetrieval=true&useSSL=false",
        "spring.jpa.hibernate.ddl-auto" : "update",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.database-platform" : "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.generate-ddl":"true",
        "spring.data.rest.default-media-type" : "application/json",
        "spring.hateoas.use-hal-as-default-json-media-type" : "false",
        "spring.security.user.password" : "1234",
        "spring.security.filter.order" : "10",

        "jwt.secret" : "secret",

        "spring.mail.host" : "smtp.gmail.com",
        "spring.mail.port" : "587",
        "spring.mail.username":"piraya.cartoony@mail.kmutt.ac.th",
        "spring.mail.password" : "aiubqiprshldbqej",
        "spring.mail.properties.mail.smtp.auth" : "true",
        "spring.mail.properties.mail.smtp.starttls.enable" : "true",

        "spring.servlet.multipart.enabled" : "true",
        "spring.servlet.multipart.file-size-threshold" : "4KB",
        "spring.servlet.multipart.max-file-size" : "10MB",
        "spring.servlet.multipart.max-request-size" : "15MB",
        "file.uploaddir" : "/public/fileStorage"
      }'
    volumes:
      - .m2:/root/.m2
      - /public/fileStorage:/public/fileStorage
    stdin_open: true
    tty: true

  frontend-app:
    depends_on:
      - backend-app
    build: ./Front-end
    # ports:
    #   - 80:80
    container_name: frontend-app
    volumes:
      - ./nginx-frontend.conf:/etc/nginx/conf.d/default.conf

  proxy:
    container_name: reverse-proxy
    image: nginx:stable-alpine
    # restart: always
    restart: unless-stopped
    depends_on:
      - frontend-app
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./dohttps/nginx/config/conf.d/default.conf:/etc/nginx/conf.d/default.conf:rw
      - ./dohttps/nginx/ssl:/etc/ssl/:rw

      

